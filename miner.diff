index 54952fc..6d5d168 100644
--- a/libethash-cl/ethash_cl_miner_kernel.cl
+++ b/libethash-cl/ethash_cl_miner_kernel.cl
@@ -277,7 +277,7 @@ __kernel void ethash_search(
        for (int i = 0; i < THREADS_PER_HASH; i++)
        {
                // share init with other threads
-               if (i == thread_id)
+               if ((uint) i == thread_id)
                        copy(share[hash_id].ulongs, state, 8);

                barrier(CLK_LOCAL_MEM_FENCE);
@@ -312,7 +312,7 @@ __kernel void ethash_search(
                share[hash_id].uints[thread_id] = fnv_reduce(mix);
                barrier(CLK_LOCAL_MEM_FENCE);

-               if (i == thread_id)
+               if ((uint) i == thread_id)
                        copy(state + 8, share[hash_id].ulongs, 4);

                barrier(CLK_LOCAL_MEM_FENCE);
diff --git a/libethash-cuda/CMakeLists.txt b/libethash-cuda/CMakeLists.txt
index d7be329..68cfe4f 100644
--- a/libethash-cuda/CMakeLists.txt
+++ b/libethash-cuda/CMakeLists.txt
@@ -5,7 +5,7 @@ FIND_PACKAGE(CUDA REQUIRED)
 file(GLOB SRC_LIST "*.cpp" "*.cu")
 file(GLOB HEADERS "*.h" "*.cuh")

-set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};--std=c++11;--disable-warnings;--ptxas-options=-v;-use_fast_math;-lineinfo)
+set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};--disable-warnings;--ptxas-options=-v;-use_fast_math;-lineinfo)

 LIST(APPEND CUDA_NVCC_FLAGS_RELEASE -O3)
 LIST(APPEND CUDA_NVCC_FLAGS_DEBUG -G)
diff --git a/libethcore/CMakeLists.txt b/libethcore/CMakeLists.txt
index 578058d..b6e778d 100644
--- a/libethcore/CMakeLists.txt
+++ b/libethcore/CMakeLists.txt
@@ -20,7 +20,7 @@ file(GLOB HEADERS "*.h")

 add_library(${EXECUTABLE} ${SRC_LIST} ${HEADERS})

-target_link_libraries(${EXECUTABLE} ethash)
+target_link_libraries(${EXECUTABLE} ethash devcore)

 if (ETHASHCL)
        target_link_libraries(${EXECUTABLE} ethash-cl)
diff --git a/libstratum/CMakeLists.txt b/libstratum/CMakeLists.txt
index 9a9c9a5..c7c4e49 100644
--- a/libstratum/CMakeLists.txt
+++ b/libstratum/CMakeLists.txt
@@ -2,14 +2,19 @@ set(EXECUTABLE ethstratum)

 aux_source_directory(. SRC_LIST)

-include_directories(..)
+
+include_directories(BEFORE ${JSONCPP_INCLUDE_DIRS})
+include_directories(BEFORE ..)
 include_directories(${Boost_INCLUDE_DIRS})
-include_directories(${JSONCPP_INCLUDE_DIRS})

 file(GLOB HEADERS "*.h")

+MESSAGE( STATUS "EXECUTABLE " ${EXECUTABLE} )
+MESSAGE( STATUS "SRC_LIST " ${SRC_LIST} )
+MESSAGE( STATUS "HEADERS " ${HEADERS} )
+
 add_library(${EXECUTABLE} ${SRC_LIST} ${HEADERS})
-target_link_libraries(${EXECUTABLE} ${Boost_SYSTEM_LIBRARY} ${Boost_THREAD_LIBRARY} ${Boost_REGEX_LIBRARY})
+target_link_libraries(${EXECUTABLE} ${Boost_SYSTEM_LIBRARY} ${Boost_THREAD_LIBRARY} ${Boost_REGEX_LIBRARY} devcore ethcore)

 install( TARGETS ${EXECUTABLE} RUNTIME DESTINATION bin ARCHIVE DESTINATION lib LIBRARY DESTINATION lib )
 install( FILES ${HEADERS} DESTINATION include/${EXECUTABLE} )
\ No newline at end of file
diff --git a/libstratum/EthStratumClient.cpp b/libstratum/EthStratumClient.cpp
index 3a6404e..f45fb39 100644
--- a/libstratum/EthStratumClient.cpp
+++ b/libstratum/EthStratumClient.cpp
@@ -1,8 +1,4 @@
-
 #include "EthStratumClient.h"
-#include <libdevcore/Log.h>
-using boost::asio::ip::tcp;
-

 EthStratumClient::EthStratumClient(GenericFarm<EthashProofOfWork> * f, MinerType m, string const & host, string const & port, string const & user, string const & pass, int const & retries, int const & worktimeout, bool const & precompute)
        : m_socket(m_io_service)
diff --git a/libstratum/EthStratumClient.h b/libstratum/EthStratumClient.h
index 37a48b8..78a4e64 100644
--- a/libstratum/EthStratumClient.h
+++ b/libstratum/EthStratumClient.h
@@ -5,6 +5,7 @@
 #include <json/json.h>
 #include <libdevcore/Log.h>
 #include <libdevcore/FixedHash.h>
+#include <libdevcore/SHA3.h>
 #include <libethcore/Farm.h>
 #include <libethcore/EthashAux.h>
 #include <libethcore/Miner.h>
